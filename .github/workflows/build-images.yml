name: Build images
on:
#  create
  workflow_dispatch:
  schedule:
    - cron: "0 1 * * 6"  # At 01:00 on Saturday.
#  push:
#    branches: [ main, master ]
#    tags: "*"
  # https://stackoverflow.com/questions/60418323/triggering-a-new-workflow-from-another-workflow
#  workflow_run:
#    workflows: [ "Bump version" ]
#    types:
#      - completed
  push:
    branches:
      - "**"
    tags:
      - "v*.*.*"
  pull_request:
    branches:
      - "main"
  create:
    tags:
      - "v*.*.*"

permissions:
  contents: read
  packages: write

env:
  # Enable color output for utils (e.g. pip, conan, cmake, etc.)
  TERM: ANSI
  CLICOLOR_FORCE: 1

jobs:
  linux:
    strategy:
      matrix:
        include:
          - directory: ubuntu
            dockerfile: ubuntu-base
          - directory: ubuntu
            dockerfile: python-clang
          - directory: jupyter
            dockerfile: ubuntu-pybind
          - directory: jupyter
            dockerfile: ubuntu-pip
          - directory: jupyter
            dockerfile: xeus-cling
          - directory: asciidoc_jekyll
          #- directory: cmake3-conan1-gcc
      fail-fast: false

    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
      -
        id: meta
        uses: docker/metadata-action@v4
        with:
          images: ghcr.io/${{ github.repository_owner }}/${{ matrix.directory }}${{ matrix.dockerfile && format('/{0}', matrix.dockerfile) }}
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
          #  type=sha,format=long
      -
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
#      -
#        run: |
#          echo ${{ steps.meta.outputs.tags }}
#          echo ${{ steps.meta.outputs.labels }}
      -
        uses: docker/build-push-action@v6
        with:
          context: ${{ matrix.directory }}
          file: ${{ matrix.directory }}/${{ matrix.dockerfile && format('{0}.', matrix.dockerfile) }}Dockerfile
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          cache-to: type=inline


  windows:
    strategy:
      matrix:
        include:
#          -
#            directory: windows
#            dockerfile: chocolatey
#            base: chocolatey/choco:latest-windows
#            runner: windows-2019
#          -
#            directory: windows
#            dockerfile: chocolatey
#            base: chocolatey/choco:latest-windows
#            runner: windows-2022
          -
            directory: windows
            dockerfile: msys2
            base: amitie10g/msys2:ltsc2019
            runner: windows-2019
          -
            directory: windows
            dockerfile: msys2
            base: amitie10g/msys2:ltsc2022
            runner: windows-2022
      fail-fast: false

    runs-on: ${{ matrix.runner }}

    steps:
      - uses: actions/checkout@v4
      -
        uses: mr-smithers-excellent/docker-build-push@v6
        with:
          image: windows
          directory: ${{ matrix.directory }}
          dockerfile: windows/${{ matrix.dockerfile }}.Dockerfile
          buildArgs: BASE_IMAGE=${{ matrix.base }}
          # enableBuildKit: ${{ runner.os != 'Windows' }}
          pushImage: false
          registry: ghcr.io
          #addLatest: true
          #addTimestamp: true
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
